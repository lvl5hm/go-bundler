var test_utils_js=(function(){function unorderedList(){return{items:[],freeSpaces:[],add(value){let index=this.items.length;if(this.freeSpaces.length){index=this.freeSpaces.pop();}this.items[index]=value;return index;},remove(index){this.freeSpaces.push(index);this.items[index]=unorderedList.REMOVED_ITEM;}};}unorderedList.REMOVED_ITEM=Symbol("REMOVED_ITEM");;const foo="dsadasd";return {default:{unorderedList},foo,};})();var test_engine_js=(function(){console.log(test_utils_js.foo);const SCALING_FACTOR=4;const _canvas=document.querySelector("#game");_canvas.style.imageRendering="pixelated";_canvas.width=300;_canvas.height=200;_canvas.style.width=_canvas.width*SCALING_FACTOR;_canvas.style.height=_canvas.height*SCALING_FACTOR;const _ctx=_canvas.getContext("2d");const _settings={pixelsPerMeter:16,tileSize:1,timeSpeed:1,gravity:20};const _entityTypesObj={};const _entityList=test_utils_js.default.unorderedList();const _keyCode={SPACE:32,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40};const _keys={};const _time={deltaTime:0,totalTime:0,prevFrameTime:performance.now()};const _camara={x:_canvas.width/2,y:_canvas.height/2};Object.values(_keyCode).forEach(code=>(_keys[code]={isDown:false,wentDown:false,wentUp:false}));mainGameLoop();const api={settings:_settings,keyCode:_keyCode,keys:_keys,time:_time,camera:_camara,addEntityType:(mapSymbol,updateFunc,defaultState)=>addEntityType(_entityTypesObj,mapSymbol,updateFunc,defaultState),addEntity:type=>addEntity(_entityTypesObj,_entityList,type),removeEntity:entity=>removeEntity(_entityList,entity),createMap:asciiMapRows=>createMap(_entityTypesObj,_entityList,_settings,asciiMapRows),loadSprite,drawSprite:(sprite,entity,animationSpeed,scaleX,scaleY)=>drawSprite(_ctx,sprite,entity,animationSpeed,scaleX,scaleY),drawRect:(x,y,width,height,color)=>drawRect(_ctx,x,y,width,height,color),loadSound,playSound,checkCollision:(entity,otherTypes,offsetX,offsetY)=>checkCollision(_entityList,entity,otherTypes,offsetX,offsetY),moveAndCheckForObstacles:(entity,otherTypes)=>moveAndCheckForObstacles(_entityList,_time,entity,otherTypes)};;function addEntityType(entityTypesObj,mapSymbol,updateFunc,defaultState={}){entityTypesObj[mapSymbol]={updateFunc,defaultState};return mapSymbol;}function addEntity(entityTypesObj,entityList,type){const entity={x:0,y:0,bbox:{left:0,top:0,width:0,height:0},speedX:0,speedY:0,type,index:0,isInitialized:false};const typeInfo=entityTypesObj[type];Object.assign(entity,typeInfo.defaultState);entity.index=entityList.add(entity);return entity;}function removeEntity(entityList,entity){entityList.remove(entity.index);}function createMap(entityTypesObj,entityList,globalSettings,asciiMapRows){for(let y=0;y<asciiMapRows.length;y++){const row=asciiMapRows[y];for(let x=0;x<row.length;x++){if(entityTypesObj[row[x]]){const e=addEntity(_entityTypesObj,entityList,row[x]);e.x=x*globalSettings.tileSize;e.y=y*globalSettings.tileSize;}}}}document.onkeydown=function(event){const key=_keys[event.keyCode];if(!key){return;}if(!key.isDown){key.wentDown=true;key.isDown=true;}};document.onkeyup=function(event){const key=_keys[event.keyCode];if(!key){return;}if(key.isDown){key.wentUp=true;key.isDown=false;}};function mainGameLoop(){_ctx.fillStyle="#444";_ctx.fillRect(0,0,_canvas.width,_canvas.height);_ctx.save();_ctx.translate(-(_camara.x*_settings.pixelsPerMeter-_canvas.width/2),-(_camara.y*_settings.pixelsPerMeter-_canvas.height/2));for(let index=0;index<_entityList.items.length;index++){const entity=_entityList.items[index];if(entity!==test_utils_js.default.unorderedList.REMOVED_ITEM){const typeInfo=_entityTypesObj[entity.type];if(typeInfo.updateFunc){typeInfo.updateFunc(entity);}}}_ctx.restore();Object.values(_keys).forEach(key=>{key.wentDown=false;key.wentUp=false;});const newTime=performance.now();_time.deltaTime=(newTime-_time.prevFrameTime)*0.001*_settings.timeSpeed;if(_time.deltaTime>0.1){_time.deltaTime=0.016;}_time.totalTime+=_time.deltaTime;_time.prevFrameTime=newTime;requestAnimationFrame(mainGameLoop);}function loadSprite(fileName,offsetX=0,offsetY=0,frameCount=1){const img=new Image();img.src=fileName;const sprite={bitmap:img,width:0,height:0,offsetX,offsetY,frameCount,entityFrameMap:new Map()};img.onload=()=>{sprite.width=img.width/frameCount;sprite.height=img.height;};return sprite;}function drawSprite(ctx,sprite,entity,animationSpeed=0,scaleX=1,scaleY=1){let savedFrame=sprite.entityFrameMap.get(entity)||0;const currentFrame=Math.floor(savedFrame);savedFrame+=animationSpeed;if(savedFrame>=sprite.frameCount){savedFrame=0;}sprite.entityFrameMap.set(entity,savedFrame);ctx.save();ctx.scale(scaleX,scaleY);ctx.drawImage(sprite.bitmap,currentFrame*sprite.width,0,sprite.width,sprite.height,entity.x*scaleX*_settings.pixelsPerMeter+sprite.offsetX,entity.y*scaleY*_settings.pixelsPerMeter+sprite.offsetY,sprite.width,sprite.height);ctx.restore();}function drawRect(ctx,x,y,width,height,color){ctx.fillStyle=color;ctx.fillRect(x*_settings.pixelsPerMeter,y*_settings.pixelsPerMeter,width*_settings.pixelsPerMeter,height*_settings.pixelsPerMeter);}function loadSound(fileName){const sound=new Audio(fileName);return sound;}function playSound(sound,loop=false,volume=0.02){sound.pause();sound.currentTime=0;sound.loop=loop;sound.volume=volume;sound.play();}function checkCollision(entityList,entity,otherEntityTypes,offsetX=0,offsetY=0){for(let other of entityList.items){if(other!==test_utils_js.default.unorderedList.REMOVED_ITEM&&entity!==other){if(!otherEntityTypes.includes(other.type)){continue;}const eLeft=entity.x+offsetX+entity.bbox.left;const eTop=entity.y+offsetY+entity.bbox.top;const eRight=eLeft+entity.bbox.width;const eBottom=eTop+entity.bbox.height;const oLeft=other.x+other.bbox.left;const oTop=other.y+other.bbox.top;const oRight=oLeft+other.bbox.width;const oBottom=oTop+other.bbox.height;const eps=0.000001;if(eLeft>=oRight-eps||eRight<=oLeft+eps||eTop>=oBottom-eps||eBottom<=oTop+eps){continue;}return other;}}return null;}function moveAndCheckForObstacles(entityList,time,entity,otherTypes){const horizWall=checkCollision(entityList,entity,otherTypes,entity.speedX*time.deltaTime,0);if(horizWall){if(entity.speedX>0){entity.x=horizWall.x+horizWall.bbox.left-entity.bbox.left-entity.bbox.width;}else{entity.x=horizWall.x+horizWall.bbox.left+horizWall.bbox.width-entity.bbox.left;}entity.speedX=0;}const vertWall=checkCollision(_entityList,entity,otherTypes,entity.speedX*time.deltaTime,entity.speedY*time.deltaTime);if(vertWall){if(entity.speedY>0){entity.y=vertWall.y+vertWall.bbox.top-entity.bbox.top-entity.bbox.height;entity.speedY=0;}else{entity.y=vertWall.y+vertWall.bbox.top+vertWall.bbox.height-entity.bbox.top;entity.speedY*=-0.5;}}entity.x+=entity.speedX*time.deltaTime;entity.y+=entity.speedY*time.deltaTime;return{horizWall,vertWall};}return {default:api,};})();var test_index_js=(function(){const imgMarioRunning='test_sprites_marioRunning_png.png';const imgMarioIdle='test_sprites_marioIdle_png.png';const imgMarioJumping='test_sprites_marioJumping_png.png';const imgGroundBlock='test_sprites_groundBlock_png.png';const imgCoin='test_sprites_coin_png.png';const imgGoomba='test_sprites_goomba_png.png';const imgQuestionBlock='test_sprites_questionBlock_png.png';const audioMainTheme='test_sounds_mainTheme_mp3.mp3';const audioJump='test_sounds_jump_wav.wav';const audioCoin='test_sounds_coin_wav.wav';const audioStomp='test_sounds_stomp_wav.wav';const{addEntityType,addEntity,removeEntity,createMap,loadSprite,drawSprite,loadSound,playSound,settings,keys,time,keyCode,camera,moveAndCheckForObstacles,checkCollision}=test_engine_js.default;const sprMarioRunning=loadSprite(imgMarioRunning,-8,-16,2);const sprMarioJumping=loadSprite(imgMarioJumping,-8,-16);const sprMarioIdle=loadSprite(imgMarioIdle,-8,-16);const sprGroundBlock=loadSprite(imgGroundBlock,0,0);const sprGoomba=loadSprite(imgGoomba,-8,-16,2);const sprCoin=loadSprite(imgCoin,0,0,2);const sprQuestionBlock=loadSprite(imgQuestionBlock,0,0,1);const sndMainTheme=loadSound(audioMainTheme);const sndJump=loadSound(audioJump);const sndCoin=loadSound(audioCoin);const sndStomp=loadSound(audioStomp);function updateWall(wall){drawSprite(sprGroundBlock,wall);}const ENTITY_TYPE_WALL=addEntityType("#",updateWall,{bbox:{left:0,top:0,width:settings.tileSize,height:settings.tileSize}});let playerStartX=0;let playerStartY=0;function updateMario(mario){if(!mario.isInitialized){playerStartX=mario.x;playerStartY=mario.y;mario.isInitialized=true;}const absSpeedX=Math.abs(mario.speedX);const dir=mario.direction||1;if(!mario.isOnGround){drawSprite(sprMarioJumping,mario,0,dir);}else if(absSpeedX>1){drawSprite(sprMarioRunning,mario,0.03*absSpeedX,dir);}else{drawSprite(sprMarioIdle,mario,0,dir);}const keyLeft=keys[keyCode.ARROW_LEFT];const keyRight=keys[keyCode.ARROW_RIGHT];const keySpace=keys[keyCode.SPACE];const metersPerSecondSq=60;const friction=10;const accelX=(keyRight.isDown-keyLeft.isDown)*metersPerSecondSq;if(keyRight.isDown){mario.direction=1;}if(keyLeft.isDown){mario.direction=-1;}mario.speedX+=accelX*time.deltaTime;mario.speedY+=settings.gravity*time.deltaTime;mario.speedX*=1-friction*time.deltaTime;const{vertWall}=moveAndCheckForObstacles(mario,[ENTITY_TYPE_WALL,ENTITY_TYPE_QUESTION_BLOCK]);mario.isOnGround=vertWall&&vertWall.y<=mario.y;if(keySpace.wentDown&&mario.isOnGround){mario.speedY=-12;playSound(sndJump);}if(vertWall&&vertWall.type===ENTITY_TYPE_QUESTION_BLOCK&&vertWall.y<mario.y){const coin=addEntity(ENTITY_TYPE_COIN);coin.x=vertWall.x;coin.y=vertWall.y-settings.tileSize;coin.isFlying=true;}const hitEnemy=checkCollision(mario,[ENTITY_TYPE_GOOMBA]);if(hitEnemy){if(hitEnemy.y>mario.y){removeEntity(hitEnemy);mario.speedY=-15;playSound(sndStomp);}else{removeEntity(mario);const newMario=addEntity(ENTITY_TYPE_MARIO);newMario.x=playerStartX;newMario.y=playerStartY;}}if(mario.y>30){removeEntity(mario);const newMario=addEntity(ENTITY_TYPE_MARIO);newMario.x=playerStartX;newMario.y=playerStartY;}const hitCoin=checkCollision(mario,[ENTITY_TYPE_COIN]);if(hitCoin){removeEntity(hitCoin);playSound(sndCoin);}camera.x=mario.x;camera.y=6;}const ENTITY_TYPE_MARIO=addEntityType("@",updateMario,{bbox:{left:-0.45,top:-1,width:0.9,height:1}});function updateGoomba(goomba){const{horizWall}=moveAndCheckForObstacles(goomba,[ENTITY_TYPE_WALL,ENTITY_TYPE_QUESTION_BLOCK]);if(horizWall){if(goomba.x<horizWall.x){goomba.speedX=-2;}else{goomba.speedX=2;}}goomba.speedY+=settings.gravity*time.deltaTime;drawSprite(sprGoomba,goomba,3*time.deltaTime);}const ENTITY_TYPE_GOOMBA=addEntityType("G",updateGoomba,{bbox:{left:-0.5,top:-1,width:1,height:1},speedX:2});function updateCoin(coin){if(!coin.isInitialized){coin.startY=coin.y;coin.isInitialized=true;}drawSprite(sprCoin,coin,2*time.deltaTime);if(coin.isFlying){coin.y-=4*time.deltaTime;if(coin.y<coin.startY-1){removeEntity(coin);}}}const ENTITY_TYPE_COIN=addEntityType("0",updateCoin,{bbox:{left:0,top:0,width:1,height:1}});function updateQuestionBlock(block){drawSprite(sprQuestionBlock,block);}const ENTITY_TYPE_QUESTION_BLOCK=addEntityType("?",updateQuestionBlock,{bbox:{left:0,top:0,width:1,height:1}});const asciiMapRows=[" # ##########                                             ","                                                          ","      ###      0000                                       ","##  #####      ####                                       ","#                                                         ","        #  G        GGGGGGGGGGGGGGGGGGG                   ","#         ###                                             ","#                                                         ","  ?                                                       ","#                                                         ","#   @    #   G G   #        0000000000000000000           ","######   #################################################"];createMap(asciiMapRows);return {};})();